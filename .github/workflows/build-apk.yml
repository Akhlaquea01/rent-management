name: Build Android APK

on:
  push:
    branches: [ android, main, master ]
  pull_request:
    branches: [ android, main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Cordova
      run: npm install -g cordova
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: List files
      run: ls -la
    
    - name: Navigate to mobile directory
      run: cd rent-management-mobile
    
    - name: Install dependencies
      run: |
        cd rent-management-mobile
        npm install
    
    - name: Add Android platform
      run: |
        cd rent-management-mobile
        cordova platform add android
        cordova platform list
    
    - name: Verify themes.xml configuration
      run: |
        cd rent-management-mobile
        # Verify the attribute is properly configured for API 35
        if [ -f "platforms/android/app/src/main/res/values/themes.xml" ]; then
          echo "Checking themes.xml for windowOptOutEdgeToEdgeEnforcement..."
          grep -n "windowOptOutEdgeToEdgeEnforcement" platforms/android/app/src/main/res/values/themes.xml || echo "Attribute not found"
        fi
    
    - name: Clean Android build
      run: |
        cd rent-management-mobile
        cordova clean android
        # Remove platform and re-add to ensure fresh build
        cordova platform remove android
        cordova platform add android
    
    - name: Verify SDK configuration
      run: |
        cd rent-management-mobile
        # Verify that we're targeting API 35
        echo "Checking config.xml for targetSdkVersion..."
        grep -n "android-targetSdkVersion" config.xml || echo "targetSdkVersion not found"
        echo "Configuration verified"
    
    - name: Build APK
      run: |
        cd rent-management-mobile
        cordova build android --release
        find . -name "*.apk" -type f
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: rent-management-apk
        path: rent-management-mobile/platforms/android/app/build/outputs/apk/release/app-release.apk
        if-no-files-found: warn
